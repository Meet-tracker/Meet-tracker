services:
  postgres:
    image: postgres
    container_name: ${POSTGRES_NAME}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - network

  ollama:
    image: ollama/ollama
    container_name: ${OLLAMA_NAME}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [ gpu ]
    networks:
      - network

  server:
    container_name: ${SERVER_NAME}
    build:
      context: .
      dockerfile: backend/server/dockerfile
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    volumes:
      - volume:/var/lib/audio_tmp
    networks:
      - network


  whisper:
    container_name: ${WHISPER_NAME}
    build:
      context: .
      dockerfile: backend/whisper/dockerfile
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [ gpu ]
    volumes:
      - volume:/var/lib/audio_tmp
    networks:
      - network

  site:
    container_name: ${SITE_NAME}
    build:
      context: .
      dockerfile: frontend/dockerfile
    ports:
      - ${SITE_PORT}:${SITE_PORT}
    networks:
      - network

  minio:
    container_name: ${MINIO_NAME}
    restart: always
    image: minio/minio
    command: server /data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    networks:
      - network

volumes:
  volume:

networks:
  network:
    driver: bridge
